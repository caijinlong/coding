void swap (int i, int j, int * p) {
    if (i == j) return;
    int foo = p[i];
    p[i] = p[j];
    p[j] = foo;
}

class Solution {
public:
    int removeDuplicates(int A[], int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (n == 0) return 0;
        
        int pre_value = A[0];
        int valid_index = 0;
        int len = 1;
        
        for (int i = 1; i < n; i++) {
            if (A[i] == pre_value) continue;
            else {
              pre_value = A[i];
              len ++;
              swap(valid_index + 1, i, A);
              valid_index++;
            }
        }
        return len;
    }
};

namespace twice {
class Solution {
public:
    int removeDuplicates(int A[], int n) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if (n == 0) return 0;
        int k = 0;
        for (int i = 1; i < n; i++) {
            if (A[i] != A[i - 1]) {
                A[++k] = A[i];
            }
        }
        return k + 1;
    }
};
}  // namespace twice
